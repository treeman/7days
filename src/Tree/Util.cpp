#include "Game.hpp"#include "Tweaks.hpp"#include "Util.hpp"float Tree::GetFPS(){    return GAME->GetFPS();}const sf::Input &Tree::GetInput(){    return GAME->GetInput();}const int Tree::GetWindowWidth(){    return GAME->GetWindowWidth();}const int Tree::GetWindowHeight(){    return GAME->GetWindowHeight();}bool Tree::IsMouseValid(){    Vec2f pos = GetMousePos();    return pos.x >= 0 && pos.x <= Tree::GetWindowWidth()        && pos.y >= 0 && pos.y <= Tree::GetWindowHeight();}Vec2f Tree::GetMousePos(){    return GAME->GetMousePos();}void Tree::SetMousePos( const Vec2f &pos ){    Tree::SetMousePos( pos.x, pos.y );}void Tree::SetMousePos( float x, float y ){    GAME->SetMousePos( x, y );}void Tree::Exit(){    GAME->Exit();}void Tree::Debug( std::string str ){    GAME->GetVisualDebug()->Add( str );}void Tree::Debug( const char *msg, ... ){    va_list args;    va_start( args, msg );    char buf[1024];    vsprintf( buf, msg, args );    std::string str = buf;    GAME->GetVisualDebug()->Add( str );}void Tree::DebugPersist( std::string id, std::string str ){    GAME->GetVisualDebug()->SetPersistent( id, str );}void Tree::DebugPersist( std::string id, const char *msg, ... ){    va_list args;    va_start( args, msg );    char buf[1024];    vsprintf( buf, msg, args );    std::string str = buf;    GAME->GetVisualDebug()->SetPersistent( id, str );}void Tree::DebugRemove( std::string id ){    GAME->GetVisualDebug()->RemovePersistent( id );}void Tree::RequestMinVersion( float version ){    GAME->RequestMinVersion( version );}boost::shared_ptr<Tree::Butler> Tree::GetButler(){    return GAME->GetButler();}boost::shared_ptr<Tree::Settings> Tree::GetSettings(){    return GAME->GetSettings();}boost::shared_ptr<Tree::Tweaks> Tree::GetTweaks(){    return GAME->GetTweaks();}boost::shared_ptr<Tree::LogHelper> Tree::GetLogHelper(){    return GAME->GetLogHelper();}