#include "Game.hpp"#include "Tweaks.hpp"#include "Util.hpp"float Tree::GetFPS(){    return GAME->GetFPS();}const sf::Input &Tree::GetInput(){    return GAME->GetInput();}const int Tree::GetWindowWidth(){    //return GAME->GetWindowWidth();    return 800;}const int Tree::GetWindowHeight(){    //return GAME->GetWindowHeight();    return 600;}bool Tree::IsMouseValid(){    Vec2f pos = GetMousePos();    return pos.x >= 0 && pos.x <= Tree::GetWindowWidth()        && pos.y >= 0 && pos.y <= Tree::GetWindowHeight();}Vec2f Tree::GetMousePos(){    return GAME->GetMousePos();}void Tree::SetMousePos( const Vec2f &pos ){    Tree::SetMousePos( pos.x, pos.y );}void Tree::SetMousePos( float x, float y ){    GAME->SetMousePos( x, y );}void Tree::VisualDebug( std::string str ){    GAME->GetVisualDebug()->Add( str );}void Tree::VisualDebug( std::string id, std::string str ){    GAME->GetVisualDebug()->SetPersistent( id, str );}void Tree::RemoveDebug( std::string id ){    GAME->GetVisualDebug()->RemovePersistent( id );}boost::shared_ptr<Tree::Butler> Tree::GetButler(){    return GAME->GetButler();}boost::shared_ptr<Tree::Settings> Tree::GetSettings(){    return GAME->GetSettings();}boost::shared_ptr<Tree::Tweaks> Tree::GetTweaks(){    return GAME->GetTweaks();}boost::shared_ptr<Tree::LogHelper> Tree::GetLogHelper(){    return GAME->GetLogHelper();}